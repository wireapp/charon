name: Staging Deployment

on:
  push:
    branches:
      - staging

env:
  DOCKER_IMAGE: lukaswire/charon
  SERVICE_NAME: charon

jobs:
  publish:
    name: Deploy to staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Release Version
        # use latest tag as release version
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_SHA}

      - name: Build docker image, push
        uses: docker/build-push-action@v1
        with:
          # login to repo
          repository: ${{ env.DOCKER_IMAGE }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          # pass release_version
          build_args: release_version=${{ env.RELEASE_VERSION }}
          # tag the image with name of the branch - staging
          tag_with_ref: true
          # add labels based on the build - see https://github.com/opencontainers/image-spec/blob/master/annotations.md
          add_git_labels: true
          # push
          push: true

      # Setup gcloud CLI
      - name: Setup Google Cloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ secrets.GKE_SA_EMAIL }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool
      - name: Configure Docker Google cloud
        run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - name: Obtain k8s credentials
        env:
          GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
          GKE_ZONE: ${{ secrets.GKE_ZONE }}
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      # K8s is set up, deploy the app
      - name: Deploy the Service
        env:
          SERVICE: ${{ env.SERVICE_NAME }}
        run: |-
          kubectl delete pod -l name=$SERVICE -n staging
          kubectl describe pod -l name=$SERVICE -n staging

      # Send webhook to Wire using Slack Bot
      - name: Webhook to Wire
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: ${{ env.SERVICE_NAME }} staging pipeline
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_CI }}
        # Send message only if previous step failed
        if: always()

